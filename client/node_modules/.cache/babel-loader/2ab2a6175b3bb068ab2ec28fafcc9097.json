{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport assign from './utils/assign';\nimport { compose } from 'redux';\nfunction enhancer(options) {\n  var config = options || {};\n  config.features = {\n    pause: true,\n    export: true,\n    test: true\n  };\n  config.type = 'redux';\n  if (config.autoPause === undefined) config.autoPause = true;\n  if (config.latency === undefined) config.latency = 500;\n  return function (createStore) {\n    return function (reducer, preloadedState) {\n      var store = createStore(reducer, preloadedState);\n      var origDispatch = store.dispatch;\n      var devTools = window.__REDUX_DEVTOOLS_EXTENSION__.connect(config);\n      devTools.init(store.getState());\n      var dispatch = function dispatch(action) {\n        var r = origDispatch(action);\n        devTools.send(action, store.getState());\n        return r;\n      };\n      if (Object.assign) return Object.assign(store, {\n        dispatch: dispatch\n      });\n      return assign(store, 'dispatch', dispatch);\n    };\n  };\n}\nfunction composeWithEnhancer(config) {\n  return function () {\n    return compose(compose.apply(void 0, arguments), enhancer(config));\n  };\n}\nexport function composeWithDevTools() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n  if (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__) {\n    if (funcs.length === 0) return enhancer();\n    if (_typeof(funcs[0]) === 'object') return composeWithEnhancer(funcs[0]);\n    return composeWithEnhancer().apply(void 0, _toConsumableArray(funcs));\n  }\n  if (funcs.length === 0) return undefined;\n  if (_typeof(funcs[0]) === 'object') return compose;\n  return compose.apply(void 0, _toConsumableArray(funcs));\n}\nexport var devToolsEnhancer = typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ ? enhancer : function () {\n  return function (noop) {\n    return noop;\n  };\n};","map":null,"metadata":{},"sourceType":"module"}